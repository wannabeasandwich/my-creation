<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.tedu.mapper.UsersMapper">
    <resultMap id="BaseResultMap" type="cn.tedu.pojo.Users">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="username" property="username" jdbcType="VARCHAR"/>
        <result column="nickname" property="nickname" jdbcType="VARCHAR"/>
        <result column="password" property="password" jdbcType="VARCHAR"/>
        <result column="mobile" property="mobile" jdbcType="VARCHAR"/>
        <result column="status" property="status" jdbcType="TINYINT"/>
        <result column="created_time" property="createdTime" jdbcType="TIMESTAMP"/>
        <result column="modified_time" property="modifiedTime" jdbcType="TIMESTAMP"/>
    </resultMap>
    <resultMap id="a" type="cn.tedu.pojo.Users" autoMapping="true">
        <collection select="cn.tedu.mapper.ArticlesMapper.selectByUserId"
                    column="id"
                    property="articles"
                    ofType="Articles"
                    fetchType="lazy">

        </collection>
    </resultMap>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete
        from tb_users
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <insert id="insert" parameterType="cn.tedu.pojo.Users">
        insert into tb_users (id, username, nickname,
                              password, mobile, status,
                              created_time, modified_time)
        values (#{id,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{nickname,jdbcType=VARCHAR},
                #{password,jdbcType=VARCHAR}, #{mobile,jdbcType=VARCHAR}, #{status,jdbcType=TINYINT},
                #{createdTime,jdbcType=TIMESTAMP}, #{modifiedTime,jdbcType=TIMESTAMP})
    </insert>
    <update id="updateByPrimaryKey" parameterType="cn.tedu.pojo.Users">
        update tb_users
        set username      = #{username,jdbcType=VARCHAR},
            nickname      = #{nickname,jdbcType=VARCHAR},
            password      = #{password,jdbcType=VARCHAR},
            mobile        = #{mobile,jdbcType=VARCHAR},
            status        = #{status,jdbcType=TINYINT},
            created_time  = #{createdTime,jdbcType=TIMESTAMP},
            modified_time = #{modifiedTime,jdbcType=TIMESTAMP}
        where id = #{id,jdbcType=INTEGER}
    </update>
    <select id="selectByPrimaryKey" resultMap="a" parameterType="java.lang.Integer">
        select id,
               username,
               nickname,
               password,
               mobile,
               status,
               created_time,
               modified_time
        from tb_users
        where id = #{id,jdbcType=INTEGER}
    </select>
    <select id="selectAll" resultMap="BaseResultMap">
        select id,
               username,
               nickname,
               password,
               mobile,
               status,
               created_time,
               modified_time
        from tb_users
    </select>
    <!--offset 表示显示页中第一条记录的编号-->
    <!--size 表示一页显示的记录数-->
    <select id="selectAllByPage" resultMap="BaseResultMap">
        select id,
               username,
               nickname,
               password,
               mobile,
               status,
               created_time,
               modified_time
        from tb_users
        limit #{offset},#{size}
    </select>
</mapper>